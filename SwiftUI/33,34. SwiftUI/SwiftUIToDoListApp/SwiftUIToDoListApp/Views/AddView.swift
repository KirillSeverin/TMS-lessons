//
//  AddView.swift
//  SwiftUIToDoListApp
//
//  Created by Martynov Evgeny on 3.05.21.
//

import SwiftUI

struct AddView: View {

    @EnvironmentObject var listViewModel: ListViewModel

    /*
     \.presentationMode - –ü—Ä–∏–≤—è–∑–∫–∞ –∫ —Ç–µ–∫—É—â–µ–º—É —Ä–µ–∂–∏–º—É –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è, —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å —ç—Ç–æ–π —Å—Ä–µ–¥–æ–π.
     */
    @Environment(\.presentationMode) var presentationMode

    /*
     @State ‚Äî —ç—Ç–æ –æ–±–µ—Ä—Ç–∫–∞, –∫–æ—Ç–æ—Ä—É—é –º—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è View. SwiftUI –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –µ–µ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –ø–∞–º—è—Ç–∏ –≤–Ω–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã AddView. –¢–æ–ª—å–∫–æ —Å–≤—è–∑–∞–Ω–Ω—ã–π AddView –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –∫ –Ω–µ–π –¥–æ—Å—Ç—É–ø. –ö–∞–∫ —Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ @State –∏–∑–º–µ–Ω—è–µ—Ç—Å—è, SwiftUI –ø–µ—Ä–µ—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç AddView –¥–ª—è —É—á–µ—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏—è.
     
     –í –Ω–∞—à–µ–º –ø—Ä–∏–º–µ—Ä–µ —É –Ω–∞—Å –µ—Å—Ç—å –ø—Ä–æ—Å—Ç–æ–π —ç–∫—Ä–∞–Ω —Å –∫–Ω–æ–ø–∫–æ–π –∏ —Ç–µ–∫—Å—Ç—Ñ–∏–µ–ª–¥–æ–º. –ö–∞–∫ —Ç–æ–ª—å–∫–æ –º—ã –≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç - –º–µ–Ω—è–µ—Ç—Å—è textFieldText, –∫–∞–∫ —Ç–æ–ª—å–∫–æ   –º–µ–Ω—è–µ—Ç—Å—è showAlert –ø–æ—è–≤–ª—è–µ—Ç—Å—è Alert.
     */

    @State var textFieldText: String = ""
    @State var alertTitle: String = ""
    @State var showAlert: Bool = false
    @State var isButtonEnabled: Bool = true

    var body: some View {

        ScrollView {
            VStack {

                TextField("Type something here...", text: $textFieldText)
                    .padding(.horizontal)
                    .frame(height: 55)
                    .background(Color.gray.opacity(0.2))
                    .cornerRadius(10)
                    .onChange(of: textFieldText) {
                    textIsAppropriateTest()
                    print($0)
                }

                Button(action: saveButtonPressed, label: {
                    Text("Save".uppercased())
                        .foregroundColor(.white)
                        .font(.headline)
                        .frame(height: 55)
                        .frame(maxWidth: .infinity)
                        .background(Color.accentColor)
                        .cornerRadius(10)
                })
                    .disabled(isButtonEnabled)

            }.padding(14)
        }
            .navigationTitle("Add an Item ‚úèÔ∏è")
            .alert(isPresented: $showAlert, content: getAlert)
    }

    func saveButtonPressed() {
        if textIsAppropriate() {
            listViewModel.addItem(title: textFieldText)

            presentationMode.wrappedValue.dismiss()
        }
    }

    func textIsAppropriateTest() {
        isButtonEnabled = textFieldText.count < 3
    }

    func textIsAppropriate() -> Bool {
        if textFieldText.count < 3 {
            alertTitle = "Your new todo item must be at least 3 characters long! üòã"
            showAlert.toggle()
            return false
        }
        return true
    }

    func getAlert() -> Alert {
        return Alert(title: Text(alertTitle))
    }
}

struct AddView_Previews: PreviewProvider {
    static var previews: some View {
        NavigationView {
            AddView()
        }
            .environmentObject(ListViewModel())
    }
}
